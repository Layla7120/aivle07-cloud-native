server:
  port: 8085

spring:
  application:
    name: platform
  # --- 기본 프로필 (default) 설정 ---
  config:
    activate:
      on-profile: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    function:
      definition: autoPublishedEventsIn;accessRequestedAsSubscriberEventsIn;accessRequestedWithPointsEventsIn
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        # 자동 출간됨 이벤트 구독 (AI 서비스 -> 서재 플랫폼)
        autoPublishedEventsIn-in-0:
          destination: aivlecloudnative
          group: platform-new-book-group
          contentType: application/json
          consumer:
            maxAttempts: 3
        # 구독자로 알람신청됨 이벤트 구독 (사용자 관리 -> 서재 플랫폼)
        accessRequestedAsSubscriberEventsIn-in-0:
          destination: aivlecloudnative
          group: platform-book-view-subscriber-group
          contentType: application/json
          consumer:
            maxAttempts: 3
        # 변경: 포인트로 알람신청됨 이벤트 구독 (사용자 관리 -> 서재 플랫폼)
        accessRequestedWithPointsEventsIn-in-0:
          destination: aivlecloudnative
          group: platform-book-view-points-request-group
          contentType: application/json
          consumer:
            maxAttempts: 3
        # 도서 열람됨 이벤트 발행 (서재 플랫폼 -> 사용자 관리)
        bookViewed-out-0:
          destination: aivlecloudnative
          producer:
            headerMode: headers
            partitionCount: 1

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---

server:
  port: 8085

spring:
  # --- Docker 프로필 설정 ---
  config:
    activate:
      on-profile: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    function:
      definition: autoPublishedEventsIn;accessRequestedAsSubscriberEventsIn;accessRequestedWithPointsEventsIn
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        # 자동 출간됨 이벤트 구독 (AI 서비스 -> 서재 플랫폼)
        autoPublishedEventsIn-in-0:
          destination: aivlecloudnative
          group: platform-new-book-group
          contentType: application/json
          consumer:
            maxAttempts: 3
        # 구독자로 알람신청됨 이벤트 구독 (사용자 관리 -> 서재 플랫폼)
        accessRequestedAsSubscriberEventsIn-in-0:
          destination: aivlecloudnative
          group: platform-book-view-subscriber-group
          contentType: application/json
          consumer:
            maxAttempts: 3
        # 변경: 포인트로 알람신청됨 이벤트 구독 (사용자 관리 -> 서재 플랫폼)
        accessRequestedWithPointsEventsIn-in-0:
          destination: aivlecloudnative
          group: platform-book-view-points-request-group
          contentType: application/json
          consumer:
            maxAttempts: 3
        # 도서 열람됨 이벤트 발행 (서재 플랫폼 -> 사용자 관리)
        bookViewed-out-0:
          destination: aivlecloudnative
          producer:
            headerMode: headers
            partitionCount: 1