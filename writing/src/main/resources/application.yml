server:
  port: 8086

spring:
  application:
    name: writing
  # --- 기본 프로필 (default) 설정 ---
  config:
    activate:
      on-profile: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    function: # <-- 이 부분을 추가
      definition: manuscriptEventsIn # <-- 이 부분을 추가: 명시적으로 사용할 Consumer 빈의 이름 지정
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        manuscriptEventsIn-in-0:
          destination: aivlecloudnative
          group: manuscript-read-model-group
          contentType: application/json
          consumer:
            maxAttempts: 3

        event-out:
          destination: aivlecloudnative
          producer:
            headerMode: headers
            partitionCount: 1

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


--- # --- 여기는 프로필 간의 구분선입니다. ---

server:
  port: 8086

spring:
  # --- Docker 프로필 설정 ---
  config:
    activate:
      on-profile: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    function: # <-- 이 부분을 추가
      definition: manuscriptEventsIn # <-- 이 부분을 추가: 명시적으로 사용할 Consumer 빈의 이름 지정
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        manuscriptEventsIn-in-0:
          destination: aivlecloudnative
          group: manuscript-read-model-group
          contentType: application/json
          consumer:
            maxAttempts: 3

        event-out:
          destination: aivlecloudnative
          producer:
            headerMode: headers
            partitionCount: 1