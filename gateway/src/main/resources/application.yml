server:
  port: 8088

---

spring:
  application:
    name: gateway
  config:
    activate:
      on-profile: default
  cloud:
    gateway:
#<<< API Gateway / Routes
      routes:
        - id: user
          uri: http://localhost:8082
          predicates:
            - Path=/users/**, /viewSubscriptionHistories/**, /viewReadingHistories/**, /viewSubscriptionHistories/**, /viewContectHistories/**
        - id: author
          uri: http://localhost:8083
          predicates:
            - Path=/authors/**, /publicationStatuses/**
        - id: aiservice
          uri: http://localhost:8084
          predicates:
            - Path=/bookWorks/**, 
        - id: platform
          uri: http://localhost:8085
          predicates:
            - Path=/books/**, /bookViews/**, 
        - id: writing
          uri: http://localhost:8086
          predicates:
            - Path=/manuscripts/**, /manuscriptLists/**
        - id: point
          uri: http://localhost:8087
          predicates:
            - Path=/points/**, /pointInquiries/**
        - id: frontend
          uri: http://localhost:8080
          predicates:
            - Path=/**
#>>> API Gateway / Routes
      globalcors:
        corsConfigurations:
          '[/**]':
            # allowedOrigins:
            #   - "*"
            allowedOriginPatterns: 
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true

server:
  port: 8088 # Ensure this port is correctly exposed by your Kubernetes service
  ssl:
    enabled: true
    key-store: classpath:keystore.p12 # Ensure this file is present in src/main/resources and packaged in the Docker image
    key-store-type: PKCS12
    key-store-password: ${KEYSTORE_PASSWORD}
    key-alias: springboot
    key-password: ${KEY_PASSWORD}

---

spring:
  config:
    activate:
      on-profile: docker
  cloud:
    gateway:
      routes:
        - id: user
          uri: http://user:8082
          predicates:
            - Path=/users/**, /viewSubscriptionHistories/**, /viewReadingHistories/**, /viewSubscriptionHistories/**, /viewContectHistories/**
        - id: author
          uri: http://author:8083
          predicates:
            - Path=/authors/**, /publicationStatuses/**
        - id: aiservice
          uri: http://aiservice:8084
          predicates:
            - Path=/bookWorks/**, 
        - id: platform
          uri: http://platform:8085
          predicates:
            - Path=/books/**, /bookViews/**, 
        - id: writing
          uri: http://writing:8086
          predicates:
            - Path=/manuscripts/**, /manuscriptLists/**
        - id: point
          uri: http://point:8087
          predicates:
            - Path=/points/**, /pointInquiries/**
        - id: frontend
          uri: http://frontend:8080
          predicates:
            - Path=/**
      globalcors:
        corsConfigurations:
          '[/**]':
            # allowedOrigins:
            #   - "*"
            allowedOriginPatterns: 
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true

server:
  port: 8088 # Ensure this port is correctly exposed by your Kubernetes service
  ssl:
    enabled: true
    key-store: classpath:keystore.p12 # Ensure this file is present in src/main/resources and packaged in the Docker image
    key-store-type: PKCS12
    key-store-password: ${KEYSTORE_PASSWORD}
    key-alias: springboot
    key-password: ${KEY_PASSWORD}