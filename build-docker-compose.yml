version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: my-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://my-kafka:9092 # <-- 이 부분을 이렇게 변경! 29092 부분을 제거합니다.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT # <-- 이 부분을 이렇게 변경! PLAINTEXT_HOST 부분을 제거합니다.
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT # <-- 이 라인은 그대로 둡니다.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  user:
    depends_on:
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8082:8082
    working_dir: /usr/src
    volumes:
      - ./user:/usr/src
      - ./maven-repo:/root/.m2

  author:
    depends_on:
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8083:8083
    working_dir: /usr/src
    volumes:
      - ./author:/usr/src
      - ./maven-repo:/root/.m2

  aiservice:
    depends_on:
      - kafka
    build:
      context: ./aiservice
      dockerfile: Dockerfile
    ports:
      - 8084:8084
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      # ✨ 아래 두 줄은 application.yml의 docker 프로파일에 이미 설정되어 있다면 삭제하는 것을 권장합니다.
      # ✨ 만약 반드시 여기서 환경 변수로 오버라이드해야 한다면, 아래처럼 수정하세요:
      # - SPRING_GPT_BASE_URL=https://api.openai.com/v1
      # - SPRING_GPT_IMAGE_URL=https://api.openai.com/v1
      - SPRING_GPT_MODEL=gpt-4o-mini
      - SPRING_GPT_IMAGE_MODEL=dall-e-3
      - SPRING_GPT_API_KEY=${SPRING_GPT_API_KEY} # 호스트 환경 변수에서 가져옴. 필수!
      - SPRING_CLOUD_STREAM_KAFKA_BINDINGS_PUBLICATIONREQUESTEDCONSUMER_GROUP=aiservice
      - SPRING_CLOUD_STREAM_KAFKA_BINDINGS_PUBLICATIONINFOCREATIONREQUESTEDCONSUMER_GROUP=aiservice
  platform:
    depends_on:
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8085:8085
    working_dir: /usr/src
    volumes:
      - ./platform:/usr/src
      - ./maven-repo:/root/.m2

  writing:
    depends_on:
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8086:8086
    working_dir: /usr/src
    volumes:
      - ./writing:/usr/src
      - ./maven-repo:/root/.m2

  point:
    depends_on:
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8087:8087
    working_dir: /usr/src
    volumes:
      - ./point:/usr/src
      - ./maven-repo:/root/.m2